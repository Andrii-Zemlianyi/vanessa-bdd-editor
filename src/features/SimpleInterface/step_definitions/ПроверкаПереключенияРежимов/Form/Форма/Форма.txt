//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;

&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;

&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Служебная функция.
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить("Снипет",Снипет);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ПредставлениеТеста",ПредставлениеТеста);
	Структура.Вставить("Транзакция",Транзакция);
	Структура.Вставить("Параметр",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;
	
	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);
	
	ДобавитьШагВМассивТестов(ВсеТесты,"ВКонфигурацииЗапущенойВРежимеТест_клиентаОткрытаОбработкаBDDEditor()","ВКонфигурацииЗапущенойВРежимеТест_клиентаОткрытаОбработкаBDDEditor","Допустим в конфигурации запущеной в режиме тест-клиента открыта обработка BDDEditor");
	ДобавитьШагВМассивТестов(ВсеТесты,"КонфигурацияЗапущенаВРежимеТестирования()","КонфигурацияЗапущенаВРежимеТестирования","Допустим конфигурация запущена в режиме тестирования");
	ДобавитьШагВМассивТестов(ВсеТесты,"УдалосьПодключитьсяККонфигурацииЗапущенойВРежимеТестирования()","УдалосьПодключитьсяККонфигурацииЗапущенойВРежимеТестирования","И удалось подключиться к конфигурации запущеной в режиме тестирования");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВКонфигурацииЗапущенойВРежимеТестированияОткрытРедактор()","ВКонфигурацииЗапущенойВРежимеТестированияОткрытРедактор","И в конфигурации запущеной в режиме тестирования открыт редактор");
	
	Возврат ВсеТесты;
КонецФункции

&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции

&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим конфигурация запущена в режиме тестирования
//@КонфигурацияЗапущенаВРежимеТестирования()
Процедура КонфигурацияЗапущенаВРежимеТестирования() Экспорт
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("txt");
	Если НЕ Ванесса.ОткрытьНовыйСеансTestClientИлиПодключитьУжеСуществующий("/out""" + ИмяВременногоФайла + """ /Execute D:\xDD\Rep\vanessa-bdd-editor-fork\BDDEditor.epf") Тогда
		ВызватьИсключение "Не смог подключить TestClient!";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//И удалось подключиться к конфигурации запущеной в режиме тестирования
//@УдалосьПодключитьсяККонфигурацииЗапущенойВРежимеТестирования()
Процедура УдалосьПодключитьсяККонфигурацииЗапущенойВРежимеТестирования() Экспорт
	ТестКлиент = Новый ТестируемоеПриложение();
	
	ВремяОкончанияОжидания = ТекущаяДата() + 60;
	Подключен = Ложь;
	ОписаниеОшибкиСоединения = "";
	
	Пока Не ТекущаяДата() >= ВремяОкончанияОжидания Цикл
		Попытка
			ТестКлиент.УстановитьСоединение();
			Подключен = Истина;
			
			Контекст.Вставить("ТестКлиент", ТестКлиент);
			
			Прервать;
		Исключение
			ОписаниеОшибкиСоединения = ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла;
	
	Если Не Подключен Тогда
		ТестКлиент = Неопределено;
		
		ВызватьИсключение ОписаниеОшибкиСоединения;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//И в конфигурации запущеной в режиме тестирования открыт редактор
//@ВКонфигурацииЗапущенойВРежимеТестированияОткрытРедактор()
Процедура ВКонфигурацииЗапущенойВРежимеТестированияОткрытРедактор() Экспорт
	ТестируемаяФорма = Контекст.ТестКлиент.НайтиОбъект(Тип("ТестируемаяФорма"), "Обработка требований: BDDEditor*");
	Если ТестируемаяФорма = Неопределено Тогда
		ВызватьИсключение "Форма редактора не найдена";
		
	Иначе
		Контекст.Вставить("ТестируемаяФорма", ТестируемаяФорма);
		
	КонецЕсли;
	
КонецПроцедуры
